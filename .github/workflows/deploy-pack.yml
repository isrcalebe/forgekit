name: Package and NuGet

on:
  push:
    tags:
      - '*'

jobs:
  pack:
    name: Pack (GameKit)
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set artifacts Directory
        id: artifactsPath
        run: echo "::set-output name=NUGET_ARTIFACTS::${{github.workspace}}/artifacts"

      - name: Install .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Pack Templates (osu!framework)
        run: dotnet pack -c Release source/templates/osu-framework /p:Configuration=Release /p:Version=${{ github.ref_name }} /p:GenerateDocumentationFile=true /p:NoDefaultExcludes=true -o ${{steps.artifactsPath.outputs.nuget_artifacts}}

      - name: Pack Templates (FNA)
        run: dotnet pack -c Release source/templates/fna /p:Configuration=Release /p:Version=${{ github.ref_name }} /p:GenerateDocumentationFile=true /p:NoDefaultExcludes=true -o ${{steps.artifactsPath.outputs.nuget_artifacts}}

      - name: Pack (FNA - NativeLibs)
        run: dotnet pack -c Release source/fna/nativelibs /p:Configuration=Release /p:Version=${{ github.ref_name }} /p:GenerateDocumentationFile=true /p:NoDefaultExcludes=true -o ${{steps.artifactsPath.outputs.nuget_artifacts}}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gamekit
          path: ${{steps.artifactsPath.outputs.nuget_artifacts}}/*.nupkg

      - name: Publish packages to NuGet
        run: dotnet nuget push ${{steps.artifactsPath.outputs.nuget_artifacts}}/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
